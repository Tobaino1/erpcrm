<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQ8AAACICAMAAADOM57YAAAABGdBTUEAALGPC/xhBQAAAXFQTFRF////
        IJ7TAAAAAJvUzufzZ7nhptXuAJnTgMXmIx8gAK3uAJjQAJLOAJXP29vb+Pz+SUlJt7e37e3tlpaWz8/P
        9fX16PX7r6+v5eXllM7s3fD5yMjIoqKiHR0d1u34AKftLi4ugoKCdnZ2UlJSAIrLX19fJiYmNzc3ERER
        wuLzi4uLampqstzxRazbhcDiPz8/g9P5JQAAHz1P/+jIF2uQJBgT//zwx9Xl2uPqWIi29vHqq52U/uzh
        FSMV//Pif3BvyrCW5tLDX3uHdHWEurWsgYyenbC7w6SRirnSinp+oK2uuKuymYV6Zouo1c/Dm5SFQ0Re
        aH16sr3IUGRula3Hkpiiq5uddYqTk3hnapeqd3BmYGR6xLuZhZ3Ae391U1RDgJ6oXnOSuJ167ejLAAAl
        oItovNDRaEtZroxeUj8sc15ftMzsYUtGNi47Pj5jPGCNV1FiSFZ2bFJs0N7Sb1IzRmqAWDQzABwyEn+s
        G1h1RMT3+1cdgwAAFaRJREFUeF7tXftj2laalQQSxICE0AP0MDE42BZIuM/Ya3szcUuS1rN1Zt3SbtPp
        7HS6093tPqbd7qOTv37PdyWMJATIiR07NucHc5Guru4993yPK0uCW2GFFVZYYYUVVsgFWW025ai8Atfc
        EAThXtOIvl428jNtNK6qDxeBsw46BGHdib4vg9zU+n3Xydv1wW4zKi2G3O9tbvYGVzYtuTFgdAhCJ1dP
        Wt0642+7p0ZbliBfw0YnnBVhZ3s5fYYaaq6lttjn5YKshbCZp3FnCzXrWp8OGETbFmND0KLSAujbwlbX
        aejaLtrtNqKt8yBHVfpCn31fDD36NHKSN9HH0m4AzR2q2ecM9lmPti5EXXCj0nzIm8KmbOiO3uK6rP0F
        0DVXFvq6q2m6K7iypi5Wn6EJoZCNflRYBpWNTdjJUVuuo+Iumbjc30Yxx8yD7uUG0BV2Wy2al60mI2SB
        K2vVhe2GoLl09qagagsrMzqikXVQyOfJXLKBdXe5lYNiVGzCbh3OoO5vT7S4ANos0YoSFSLogtA0esKg
        19kQVBm92Y52MCQr67vClqo6xNqmqtIExZpPtctxjQ4me0PTYCrMQSUJSfcDaDkIFLrrIl40HCdlYen6
        oTxkUL3V6RCJeexX3ZqZQNtPNtwRtmVV2NG66q5Qb9BQ4zHaMqMCA/iAL98M7bW3ib9TPhTfjkoRDIhC
        EHTD6bq9HvV4J2G7XjEqnEOtb29gTEYf4mhubNRT/FnJfjvU+obDyW6PSkB3uaicWRG1g2RH1oVeo+vq
        3d7AbW3IZArxbovDqMBAfCQR42M4THaYmhJokokXRsh6XKySmJrwFo1rk5N7sEk2L5sJn6oEUlQKoVLz
        woDqGOxUeWKSXJ/x00WeT8w5Zrql1XtCZyB0txtklHHdBRU/KhH07X7T3ew01XWt6W64zbg5KsOqFxUj
        uMIWemhgaBAUCNmK08FJD5LjI79OE05j6+hkX2k+qgkBhnxAFRT3GSG9HHxszmioyNfKUZEBvXVaG8K2
        imnsU+cTjjqoBbFe6BtN3elquryh6s6uo6uxGTfFSpJoTBtcR6MjdFwX/q7nJuhQrEqhHZVDtIgPQZN3
        hR25ScUkH2ZQCeKKYvYibJBiXfgFfDCtLEZj1ql7PF+NzzncUhd2JezskAEiF0n4PZ6vxMxA3+51u9ub
        3c5OrztY73YHMXsBHxUxKk+gdzmNZcjwJd1w0wTgg+cTFhPyMWh1hTr8O5Dkww74ghWVCTKlbhuOrg0G
        ahimO9Gei8Er8Alhk9Q0eKU+JRMtHTMZl12Kjw3VkLtNw9hyDHkXSUvMBEyRr6X54JCnsNYMvZ9KD5Ry
        JTnfER/rMBi3RaUUH8WAr8QtjLlrco+NBrNJ8q3LMSshr1JNGG4DTe0MZM6AZRmd7S2hF+0gKHxFjBmB
        vrtRr69v1zeF3fruTr2+G9OHHVTTHhLooWWg0XG0pFRNsZYyr5APGMyOQb5J7SV9XzGolRPtMxvZ7oIF
        l0W8PBl7By4hKk7gP0gFLuaLwmyX8RzvhVkN4p3WN3QMDRxsyMjNGtBsnI9E1RCY6DqmUB+0OpvJTNkU
        C6n4HPGx2eoi5q2vr6f04fFBVJoA2R7QNWhGMaezUz8LlrEkIaXCYii8dY3Qhy9LqM7kE53Wtzc78B+d
        jjDowH8gJE35aIup8TEgUOw4rt7s9FOezBRT0SiMt4BDKSIhGQv8GWPkNIpCO5A0sLE8+QC0zXTmq7Rn
        ZrHRZy0y1JNGaCY7vSj/MGfyKwYHh8hdtZteR2VUV+tQxTqcWWeHCqlLFcVZ9XFqL1qY1/t51AHkq+Z0
        w3br2uLrR0a/nkToHRbCGWgdJ8/6DCFDJTgc+1BzLEe4hqp1ut2+u7wbF0NDV1236SxttiEnkYfuFpYk
        eVz/K8Jo3IgLexfCW9fhW4+He1GBoZXhizhDVTg9FPxBFBqMg4UGIEeXChVjNtFIAwt2o5XTyaHlrA7O
        k5WhO85+VM6L9/8Gf+R9zpBb3MHpYYKdCEd/6z36zd6BbhryY+lAOdCV449a+w1Z4WQ5syenH4+eGAey
        cvz02Scc2m3JxlwHcvDpyeHJb3UD6WmLWsRCRlfwNxsP/+4zTBrq6SbVMww4BblxqhkYwSyOnj8d/Y5D
        f1sK1zB06q/SUNgIohqzID5Om+7eweGTluZ2Mvn4+6dytzXSxk7/8Glzv9k8O/5cVt3nXxxr/bOslo/H
        Tefhl03n8Kt/+PrYdRu/ORlpmRWBx2fg5Ld0bUc/dPdx5P6X49HYyZQBenr6qX3Qdxuj8VnrUPvieA/u
        ffTxqNN0xxntHz0fjz42Dptnz4pH41Hz7NFAc8aNx/vYMpcQ4uP54MWTU+2b3397kK2Prw/Pvjp44f7h
        5Oz4H789rXd+Pvqj3D979N2fiqPMhg90p//9P3W6hz889v/8+eYP/6ycvngyRyCPsWQ0xqdPuNOTwxdn
        //LN4OTT/ePBk6x+AIe9f/3i+y+Mh98pB85T7sfTf9NHY+PH/eZp55sMBo8Oz/597/v/6H7z/WePT150
        /vPgiQ7hPhthy1wDff8vcgs0Pn02/umX704HmXz88fGTk+OfR70T5/jshd4ZPTn63Pn07OE3v//i+dMs
        PkZftX765XcjF61+/ezJYeu/MNjenCzh0eZZsz8+HejPT9TRX/70mat/bDx72oFqMnDs7jV+/OVj9eDH
        vZHTP/35/Y+052Plx/0vVfW/40vxCEeq/f7/HPykjpU/f3TaUT979K2sfur87w8DkBhVmcEjTTuB/LjW
        +Mw4Gme6K2PvAI7iWNP3W6f7x/vyeJ9r6nBUKjf6Q6Y+jFNtn3s03nvYfDg2RmeoeHD4wzyFPjo8MeXW
        kbbHnY5NDoLTDUNzsmu34KaP90/PlEdfUnWDOzxr7SuqMZJxllkcIDwct1vozNEep4/3H+415IPxqUIj
        uAqMXnx1NQ2/rZg35yussMIKdw2+eJ0Ios9rQeJfKRNI1UKhtBxz6oSbZ//OYHYnyoVaLX7yOYfGMdtM
        iNj2xa1MKxZq6WusDG3pOmFFn9eCjHR2hTTM4jXC86LCtSDrGj/zH3cTpUz/IdX4O4qZ/yAz3F0++BUf
        CczRx2L/UWGHRl9y4CLVWd0LVY7KeUDVK1E5G9VM/+GVF0KkXgTRlxwIqL4YfVmCgHU6b+UL1AWo35Ul
        /Y7fIZIXbbRbiN/GsATUDz77v7MzsBgfOSuLqFxL3iS0CF4JfGQm5K8HxkfGzQnzwPhI/zc+G0rIR77K
        HImplpM7wAcfpbeMj/IV8iGBj8QtU5cEG3Z7KXwoimm3kZD6vo+lg0WI/AcrYzXh+x7yVds0My9BXpQP
        hM3CFeiD+ODjtw0uQYoPxTTbnm9ZcHBY3AO0u1AplGqYvwmwzC1FgYyq0Eq8bEm+Z8eZeRU+rkAf5qvw
        gW4rZtuXyqAAXwuVSq0agQJhOGLsqFSZRPCFyKJoGtWqVipMO4EIYjybaGH+ND8fFvio3BQ+RIyNRlUL
        h4Xx07BgCtP59mj4gW+WeQijPLVHGJVHRE6ZBJUlNEFfL8hH6cr4WB7nYBg2DIPRwTMSsliIYHpBqVII
        JNpRFGEvvMU0kAAUVvQtxgz6wOSChELy2mhwpvIMyqSP1E3NlwHGx+IcwbSLnmRhAmsQBNXmA8v32tlu
        ETA9EQwE0kQUHjQCRtpz60MyUkh0pVKtFWBEcC7z22dgfFzBBR9lIR/kJCzMYKEE4whFXSlV+KDsz1WU
        4ouoE1gxE1SK5QKGWZ57jOlBeJUSuWARBVhigbkWuNx5pIg0M1fFR+opBwYFYgYTEDt6F4ikCFsKIGm/
        HNRoEqVMp+Mx85BS41CKIgJMUM46RPGQq0MXokT5itg2oUZsKZEYYZSwoCylXBkfrOFUQmGDCpICRQ1e
        pADALNqHx+NNGL4vQi4FXvTSHbUxu7VCzH2eQykGVbiU1O2/OMIiMqp8GeakWFAIu3MVyUwbvEOVdB5o
        RUpbW1a3LwNJPtAPD2kURQ6STTnxWE+5ipVO1C2yClKO6Mcmry3CqPiZIU/QpqgU360g+jAVnFsSGK8E
        sVEqRYlNDJkQJgY+ZXL0VfHBGi6gYaSXRUwJuED0I5mm7nlVypi8+Mzb0BAo4cuhkcNJQD3BMNOKIhCJ
        JQRhKpttWF+VyIirDGE6QQig2J5VpuwF7hzJrh86WsZH/vCcH6xhiZwFyRNGgFMWZy3WJgeQnnqavVIV
        ztOz25RoYKIRlxGZ24Toqm6xSF9s5OkmWRr8pujbbQQU8kLlkJwpigHOMxtHlTD7Q4iDTuBS7OCq+ChT
        wwF6gfSJqLAzjJ+yCKReqYftCOgnRkiOj4JDUB5S3s4SdwZqeQLaUR5SXKXqdIzlZZyrDeILLHNJAz6F
        eVrs5ykK8Hz+ywP5oLSlIWuYgFnL6gUDzRoZVQIK8hKsXFjXiNQw1yTQv+VSCHdUa6UKmGDVcUbK52by
        DJPCTJZLZoBZwwOH6RtZz7x6F4dNropdd0Owgx8kN545Y7BqksBUnBAF8kqWVRIHRAIFAbYYQSYFC7EB
        MpwQ9A3WgzxdooUfzgpbwTlrNYiSTiuCl+mJFeRa2Zeo4F7Dw4l56jFpesbkLgoEkaJFzoJCGcHC+MiN
        FyjAlsA6rTxjs8bCIOIsjmMV2URPVy5kY3OVNQdsOUj5DZ22FC4HYW7RmSWsTeJrqij8ksjovAFVbDMP
        gslkLgUJz0W7wEA2iFyQBIFWJaTSkwAJNx6tV0s1cqvRSgI76DJXIOEwxkSJ+sOk4GW43TRac27nnUCB
        0UWLGBCDoaFfCG0wmQotqkAE28/OTG6HvH30kIpNa2efdQucoMfzfN88sFOLSPwwEyyIYKh8JXlRBQqA
        phFIaeRULaQs7GuYREv5z9vSNre2u0ue62dgvlJixsRIAZAJE1M8m4TwzMn0nZwakRZOJFIUCgjwR9Hu
        xTCnB9HMhweV4SWTz6ExKFhgkYrY9XzyEVhZoD+MiKWKiEHeFHbWd4R7eV4uwAC10NUACkJwu+R36TIS
        dTjzzEWYTLjUSE/14l4qTFSY4VIAUU0bhl/IzK1JJhTYyDiJCgh43lW+RTB6wj3Cer4HgM5BRkJWjWyv
        RqTQCLNDXxGEnV+rwFE4CMIGSZi8ecvpNoUn5o/TTgd01DLosBkVFDhKWG9QOnhhJkLoIR337iWe0swN
        cqIIgWEYIlIyYl8R4k1czIpCBTuinJnOSw+Y5NIvGAgXTwljgVpDJ06Ll+zzXwjuhI97QrTlldAOYyyF
        IIQ+yDveZygk/SQ4BlJkTnbO/+cQoDO0oyCmTYM8poIsBIkIiW2uPvPC9smqmxM+1u/hm+ktWtksAdkv
        hsgcBPmHafc8cqoZLdMllczL7+3ssYGO6OniqS+CeyGn+Zqy4Ez/5f2XaEQ+t5cuzmLdf/l6iROW3pOr
        dOTSJo7QQ+qfRQhFrKiYgIQJH86MUkLYoBQrzMTIRphffj1ZRGiv3V9bwwrE6IeE7GzJEPYatr729V8W
        loeUjdDVuiHLaunKdfJxXzDHEujs/++HiShSGWu6hPeRyoi0OKLrUCwEF18hgMzDS/CxBrdPL+64t8Oe
        pVfeoW2vpY9zECmUU7Jhwc3FLZ9dHCDLoismmf6DZMauSYaxCyNXGB0UTSmGwA2/Yq47FwrGfv8llZzB
        Rt2lB8N82nSZl/dY8EEqzS5cke0ryMuYG8WomEX5i7JGhA5UhrJYZdBBjIDcJZnLK4KNXkLAYt8UBC6I
        I2TocmEiIGIgyBpBC005BkWLm3xCRF5GR4MUUIGk70q4IChkMfffAcqffEIfzIJeI74sQDjTbFDAoosW
        SbAoAjkxm3v9ILIYbQx/7T7wV+H/6IO+XsE/jyaI1qJIzsJ16LLBhYsXRBFEVCyKLs9zzoVEDAAfvPte
        VDrPda4I4cUIRONwGTr3v18K3CnkhPQOXORYoV8OFDGi4cNf2cf9tau41pmGYkb/HmDrz5mUnEGqUhih
        i/XRhjcDj9GwtvZuyMfaO9H2NwBykxR4Zt/YQ6B87BKvMuaGxWgovPsBfdx/+YZ0OQFbwmTyYc+1pKsF
        izFrlXf/SnxQdvbGMeelLNcFZOhra78yf3r/DVrLzcXLKR/XIY8bB1qyhPH2/jX4r5sH4uOvH75XAB/X
        48JuGCzw8d6HWzUIJNpyt0Grug+YPlZ8EIrVQqHy3q/zHlS6c3DfO0e05W5j/cMJcrzI+vbj/PI6kHgt
        9R3FdsQFIfZqw7sKNbq4Hv7N9wsCtxkDxoTQ22KE5Hpf7W2GvsF4EFodppOdPL/vcJvRD+XR4WRW2Kkv
        fV3mrYZcZzRsteh3G6iU47c0bjPcUB50J4y8TeWdXD/iclvR6jEO2PuaDS3k5i6H3DDYRi/313eJEKGX
        4zayWwpjQHyc+9BOKJA870C+nZDZC6nPfzOA/ZqA8Gp3Td0KqOwF7u75CzfD73c9BVlhhbsLxUvcIKhk
        P05I9xLkuhsFdYoZz9O8NZDo9pvhdKT2g+y7nyS6MyvjHvAUpIBTxAdvLx/FksRxXpXdIMhug7LDX3yK
        RnR+A5pUsxTOo7u5aNdkb/SXfYZVp79XMrmpalJt2tZNhl+iRw59KNwsB6JlhvooDoNhG9q3ggCbCA/Y
        T5B5BZ+TxKLIntG2rYAeTPVEP7C5djnARvp5KbEoBaDIF9kjiL5oD1ntthiIb4EdtekJGPIYCh8MhxWR
        8VGsilbA29yQHw55Jp12+GtUZsHirBoq8iJnBvisSpxPN0Wa4HJYK5sSz0v2sKBwZX5oiRUPZoZaJYsz
        K4El5nidwHVD8UR6jtLGhGLyxArjg26wUIIyKPLs8OZGiWQEPvghZ9HbBqSq6dNTf2Kg+PTbUybdwxeI
        JrOXIa/YZIZKICpSTQJzomI/ENv2pdwVfNUwi55It72alijyVeLD5HmIu1bi/EoFJkGVvFpMH5CTV/HL
        hSAI+FrRq1ENU8LRUz4s9lSexdtStc2ZYmDSQ8/B3IcJbw5YbFSkUrsIoZsi40PhRbvYtsmB0ENUzJoe
        hGYDWix6WZRX8YaB10YtxSc+PF5qm+KUD589Yl0OzHM+iLHCjf9/nmJVfUWhDos1k2sHjA8u4CEXzzbp
        qXyJTT9XrlG9B4gvFr0erlxVQAl4aHPEhzIEa2ZMH2ZtiOrVIQyL+BAVjx7ODnh20psMc0hPEWI2izzp
        n/iQ6N0QAb1kgfbBYxAUEeWCCGlYFWzkUYn2loacTz9059H9w/TbY+WKaJI/9elQ8DPRBzVJp7nxUDzJ
        YjcwFi3JLA4VcwjLN32LpalFyzrPzlBmNz7Df3gWeQfFs+izyJ7sb9PRiKum5WM76tlolo5Cqqf4EgVg
        6w3fCfmGwPzpCucYPljxEYd5Tfd5rrDCCiussMIbA8f9P9I1W7PYBEzfAAAAAElFTkSuQmCC
</value>
  </data>
</root>